{"version":3,"sources":["assets/video/Video2.mp4","components/rutaA/index.js","components/rutaB/index.js","components/rutaC/index.js","components/dashboard/index.js","context/auth/authContext.js","components/auth/index.js","components/crearUsuario/index.js","context/auth/authReducer.js","types/index.js","config/clienteAxios.js","context/auth/authState.js","config/token.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RutaA","useState","mensaje","setMensaje","to","type","onClick","RutaB","RutaC","Dashboard","AuthContext","createContext","Login","authContext","useContext","iniciarSesion","usuario","dashboard","email","password","usuarioLocal","setUsuario","leerInputs","e","target","name","value","className","autoPlay","muted","loop","id","src","Video","onSubmit","preventDefault","trim","alert","placeholder","onChange","autoComplete","CrearUsuario","state","action","clienteAxios","Axios","create","baseURL","AuthState","props","useReducer","AuthReducer","dispach","datos","a","console","log","ClienteAxios","post","respuesta","payload","response","Provider","children","tokenAuth","token","defaults","headers","common","App","localStorage","getItem","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.227c7ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Video2.3a62d03a.mp4\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst RutaA = () => {\r\n  // ESTO ES PARA JAVASCRIPT\r\n  const [mensaje, setMensaje] = useState(false);\r\n  const ejemploFuncion = () => {\r\n    setMensaje(true);\r\n  };\r\n  const ejemploFuncion2 = () => {\r\n    setMensaje(false);\r\n  };\r\n  // ESTO ES PARA JAVASCRIPT\r\n  return (\r\n    // ESTO ES PARA EL HTML\r\n    <>\r\n      {mensaje ? (   //ternario (ABRIR COSAS, MODALES, ETC)\r\n        <>\r\n          <h1>Desde Ruta A</h1>\r\n          <Link to=\"/dashboard\">\r\n            <button type=\"button\">Dashboard</button>\r\n          </Link>\r\n          <Link to=\"/rutaB\">\r\n            <button type=\"button\">Ruta B</button>\r\n          </Link>\r\n          <Link to=\"/rutaC\">\r\n            <button type=\"button\">Ruta C</button>\r\n          </Link>\r\n          <button type=\"button\" onClick={() => ejemploFuncion2()}>\r\n            FALSO\r\n          </button>\r\n        </>\r\n      ) : (\r\n\r\n          \r\n        <button type=\"button\" onClick={() => ejemploFuncion()}>\r\n          VERDADERO\r\n        </button>\r\n      )}\r\n    </>\r\n    // ESTO ES PARA EL HTML\r\n  );\r\n};\r\nexport default RutaA;","import React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst RutaB = () => {\r\n    return (\r\n        <>\r\n            <h1>desde ruta B</h1>\r\n            <Link to=\"/dashboard\">\r\n                <button type=\"button\" >Dashboard</button>\r\n            </Link>\r\n            <Link to=\"/rutaA\">\r\n                <button type=\"button\" >Ruta A</button>\r\n            </Link>\r\n            <Link to=\"/rutaC\">\r\n                <button type=\"button\">Ruta C</button>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RutaB;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nconst RutaC = () => {\r\n    return (\r\n        <>\r\n           <h1>dede ruta C</h1> \r\n           <Link to=\"/dashboard\">\r\n                <button type=\"button\" >Dashboard</button>\r\n            </Link>\r\n           <Link to=\"/rutaA\">\r\n                <button type=\"button\" >Ruta A</button>\r\n            </Link>\r\n            <Link to=\"/rutaB\">\r\n                <button type=\"button\">Ruta B</button>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RutaC;","import React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nconst Dashboard = () => {\r\n    return (\r\n        <>\r\n          <h1>Desde el Dashboard</h1>\r\n            <Link to=\"/rutaA\">\r\n                <button type=\"button\" >Ruta A</button>\r\n            </Link>\r\n            <Link to=\"/rutaB\">\r\n                <button type=\"button\" >Ruta B</button>\r\n            </Link>\r\n            <Link to=\"/rutaC\">\r\n                <button type=\"button\">Ruta C</button>\r\n            </Link>\r\n            <Link to=\"/crearUsuario\">\r\n                <button type=\"button\">Crear Usuario</button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n                <button type=\"buttom\">Cerrar Sesion</button>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import {createContext} from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport Video from \"../../assets/video/Video2.mp4\";\r\n\r\nconst Login = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuario, iniciarSesion } = authContext;\r\n\r\n  //HOOK DE ESTADOS\r\n\r\n  //FUNCION DE\r\n  const [dashboard, setDashboard] = useState(false);\r\n\r\n  const [usuarioLocal, setUsuario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  //OBJECT DESTRUCTURING\r\n  const { email, password } = usuarioLocal; //EXTRAER PROPIEDAS DE USUARIO PARA QUITAR USUARIO.ALGO\r\n\r\n  //HOOK DE EFECTO\r\n\r\n  //LEER CAMBIOS EN INPUT\r\n  const leerInputs = (e) => {\r\n    setUsuario({\r\n      //hace una COPIA DE USUARIO\r\n      ...usuarioLocal,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault(); //EVITAR QE PAGINA RECARGE AL ENVIAR UN SUBMIT\r\n\r\n    //VALIDAR CAMPOS VACIOS\r\n    //.trim BORRA LOS ESPACIOS EN BLANCO PARA NO GENERAR ERRORES Y SEGURIDAD\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      alert(\"Completa los Cambios\");\r\n      return;\r\n    }\r\n\r\n    //PASAR EL USUARIO AL ACTION\r\n\r\n    iniciarSesion(usuarioLocal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {dashboard ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <div className=\"contenedorGeneralLogin\">\r\n          <video autoPlay=\"autoPlay\" muted loop=\"loop\" id=\"myVideo\">\r\n            <source src={Video} type=\"video/mp4\" />\r\n          </video>\r\n          <div>\r\n            <form className=\"login\" onSubmit={submitForm}>\r\n              <h3 className=\"tituloLogin\">INICIAR SESION</h3>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"su correo\"\r\n                className=\"user\"\r\n                value={email}\r\n                onChange={leerInputs}\r\n                autoComplete=\"off\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"password\"\r\n                placeholder=\"su contraseña\"\r\n                value={password}\r\n                onChange={leerInputs}\r\n                autoComplete=\"off\"\r\n              />\r\n              <button className=\"btnLogin\" type=\"submit\">\r\n                Entrar\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CrearUsuario = () => {\r\n    return (\r\n        <>\r\n            <h1>Crear Usuario</h1>\r\n            <br/>\r\n            <form>\r\n                <p>Nuevo Usuario <input \r\n                    type=\"text\" \r\n                    placeholder=\"Usuario\">  \r\n                </input></p>\r\n                <p>Contraseña <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\">\r\n\r\n                </input></p>\r\n                <p>Confirmar Contraseña <input \r\n                    type=\"password\" \r\n                    placeholder=\"Confirmar Password\">\r\n                </input></p>\r\n                <p>Email <input \r\n                    type=\"email\" \r\n                    placeholder=\"tucorreo@email.cl\">\r\n                </input></p> \r\n\r\n                <button type=\"submit\">Crear Usuario</button>\r\n\r\n                <Link to=\"/dashboard\">\r\n                    <button type=\"button\"> Volver </button>\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CrearUsuario;","import {\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n} from \"../../types\"\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case LOGIN_EXITOSO:\r\n            return{\r\n                ...state\r\n            };\r\n        case LOGIN_ERROR:\r\n            return{\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","//LOGIN\r\n\r\nexport const LOGIN_EXITOSO = \"LOGIN_EXITOSO\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";","import Axios from 'axios';\r\n\r\nconst clienteAxios = Axios.create({baseURL: \"https://www.saicoma.cl\"});\r\nexport default clienteAxios;","import React, { useReducer } from \"react\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\n\r\nimport ClienteAxios from \"../../config/clienteAxios\";\r\nimport { LOGIN_EXITOSO, LOGIN_ERROR } from \"../../types\";\r\n\r\nconst AuthState = (props) => {\r\n  //ESTADO INICIAL\r\n\r\n  const initialState = {\r\n    usuario: null,\r\n  };\r\n\r\n  //FUNCION PARA EL DISPACH (LO QUE VA MODIFICANDO EL STATE)\r\n  const [state, dispach] = useReducer(AuthReducer, initialState);\r\n  //FUNCIONES\r\n\r\n  //INICIAR SESION\r\n  const iniciarSesion = async (datos) => {\r\n      console.log(datos)\r\n    try {\r\n      const respuesta = await ClienteAxios.post(\"/login\", datos);\r\n      console.log(respuesta);\r\n      dispach({\r\n        type: LOGIN_EXITOSO,\r\n        payload: respuesta,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        usuario: state.usuario,\r\n        iniciarSesion,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import clienteAxios from \"./clienteAxios\";\r\n\r\nconst tokenAuth = (token) => {\r\n  if (token) {\r\n    clienteAxios.defaults.headers.common[\"Authorization\"] = `bearer ${token}`; //VERIFICAR EL TOKEN\r\n  } else {\r\n    delete clienteAxios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default tokenAuth;","import React from 'react';\nimport RutaA from './components/rutaA';\nimport RutaB from './components/rutaB';\nimport RutaC from './components/rutaC';\nimport {Switch, Route, BrowserRouter as Router} from \"react-router-dom\";\nimport Dashboard from './components/dashboard';\nimport Login from './components/auth/'\nimport CrearUsuario from './components/crearUsuario';\nimport AuthState from './context/auth/authState';\nimport tokenAuth from './config/token';\n\nfunction App() {\n  //COPIO TOKEN DEL LOCAL STORAGE\n  const token = localStorage.getItem(\"token\");\n  if(token){\n    tokenAuth(token);\n  }\n  return (\n    <>\n    <AuthState>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/rutaA\" component={RutaA} />\n          <Route exact path=\"/rutaB\" component={RutaB} />\n          <Route exact path=\"/rutaC\" component={RutaC} />\n          <Route exact path=\"/crearUsuario\" component={CrearUsuario} />\n        </Switch>\n      </Router>\n    </AuthState>\n    </>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./style.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}